declare type AcceptablePrimitive = string | number | boolean | null;
declare type Payload = {
    [key: string]: AcceptablePrimitive | Payload | (AcceptablePrimitive | Payload)[];
};
export declare type Request = {
    request_id: string;
    action: string;
    payload: Payload;
};
export declare type Response = {
    request_id: string;
    action: string;
    type: 'response';
    success: true;
    payload: Payload;
};
export declare type ResponseError = {
    request_id: string;
    action: string;
    type: 'response';
    success: false;
    payload: {
        error: {
            type: string;
            message: string;
            data?: {
                [key: string]: string;
            };
        };
    };
};
export declare type Push = {
    request_id: undefined;
    action: string;
    type: 'push';
    payload: Payload;
};
export declare type PushResponse = {
    request_id: string;
    action: string;
    type: 'push';
    payload: Payload;
};
export declare type Ping = Readonly<{
    action: 'ping';
}>;
export {};
//# sourceMappingURL=types.d.ts.map